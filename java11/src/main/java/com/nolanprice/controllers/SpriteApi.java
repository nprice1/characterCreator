/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.1-SNAPSHOT).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.nolanprice.controllers;

import com.nolanprice.model.CharacterInfo;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-04-26T17:45:10.977235Z[Etc/UTC]")
@Validated
@Api(value = "sprite", description = "the sprite API")
public interface SpriteApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /sprite : Generate the characters sprite sheet
     *
     * @param characterInfo  (optional)
     * @return The sprite sheet for the provided character info (status code 200)
     */
    @ApiOperation(value = "Generate the characters sprite sheet", nickname = "getSpriteSheet", notes = "", response = org.springframework.web.multipart.MultipartFile.class, tags={ "sprite", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The sprite sheet for the provided character info", response = org.springframework.web.multipart.MultipartFile.class) })
    @PostMapping(
        value = "/sprite",
        produces = { "image/png" },
        consumes = { "application/json" }
    )
    default ResponseEntity<byte[]> getSpriteSheet(@ApiParam(value = ""  )  @Valid @RequestBody(required = false) CharacterInfo characterInfo) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
